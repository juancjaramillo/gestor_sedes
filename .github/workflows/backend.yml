name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Laravel • Lint + Static + Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    env:
      APP_ENV: testing
      APP_DEBUG: "true"
      # Si tu .env.testing ya tiene clave, esto no se usa; igual lo dejamos:
      APP_KEY: base64:dummykeyparatests++++++++++++++=
      DB_CONNECTION: sqlite
      DB_DATABASE: ":memory:"
      CACHE_STORE: array
      QUEUE_CONNECTION: sync
      FILESYSTEM_DISK: public
      API_KEY: ${{ secrets.API_KEY_TESTING || 'sk_testing_dummy_0000000000000000000000000000000000000000000000000000000000000000' }}
      API_RATE_LIMIT: "60"
      API_CACHE_TTL: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: none
          extensions: mbstring, intl, pdo_sqlite, sqlite3, fileinfo, gd, curl
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare environment
        run: |
          cp .env.testing .env
          php artisan key:generate --ansi || true
          php artisan storage:link || true
          # Limpiar para evitar residuos de cachés
          php artisan config:clear
          php artisan route:clear
          php artisan cache:clear

      - name: Lint (Laravel Pint)
        run: composer lint

      - name: Static analysis (PHPStan)
        run: composer phpstan

      - name: Run tests (PHPUnit)
        run: php artisan test --env=testing
